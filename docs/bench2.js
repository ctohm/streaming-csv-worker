(()=>{var xe=Object.create;var he=Object.defineProperty;var Le=Object.getOwnPropertyDescriptor;var je=Object.getOwnPropertyNames;var Ie=Object.getPrototypeOf,Me=Object.prototype.hasOwnProperty;var Ae=u=>he(u,"__esModule",{value:!0});var be=(u,i)=>()=>(i||u((i={exports:{}}).exports,i),i.exports);var De=(u,i,S)=>{if(i&&typeof i=="object"||typeof i=="function")for(let L of je(i))!Me.call(u,L)&&L!=="default"&&he(u,L,{get:()=>i[L],enumerable:!(S=Le(i,L))||S.enumerable});return u},ve=u=>De(Ae(he(u!=null?xe(Ie(u)):{},"default",u&&u.__esModule&&"default"in u?{get:()=>u.default,enumerable:!0}:{value:u,enumerable:!0})),u);var Ee=be((de,pe)=>{((u,i)=>{typeof pe!="undefined"?pe.exports=i():typeof define=="function"&&typeof define.amd=="object"?define(i):de[u]=i()})("streamSaver",()=>{"use strict";let u=typeof window=="object"?window:de;u.HTMLElement||console.warn("streamsaver is meant to run on browsers main thread");let i=null,S=!1,L=R=>{try{R()}catch(m){}},M=u.WebStreamsPolyfill||{},w=u.isSecureContext,n=/constructor/i.test(u.HTMLElement)||!!u.safari||!!u.WebKitPoint,T=w||"MozAppearance"in document.documentElement.style?"iframe":"navigate",y={createWriteStream:V,WritableStream:u.WritableStream||M.WritableStream,supported:!0,version:{full:"2.0.5",major:2,minor:0,dot:5},mitm:"https://jimmywarting.github.io/StreamSaver.js/mitm.html?version=2.0.0"};function N(R){if(!R)throw new Error("meh");let m=document.createElement("iframe");return m.hidden=!0,m.src=R,m.loaded=!1,m.name="iframe",m.isIframe=!0,m.postMessage=(...H)=>m.contentWindow.postMessage(...H),m.addEventListener("load",()=>{m.loaded=!0},{once:!0}),document.body.appendChild(m),m}function I(R){let m="width=200,height=100",H=document.createDocumentFragment(),C={frame:u.open(R,"popup",m),loaded:!1,isIframe:!1,isPopup:!0,remove(){C.frame.close()},addEventListener(...k){H.addEventListener(...k)},dispatchEvent(...k){H.dispatchEvent(...k)},removeEventListener(...k){H.removeEventListener(...k)},postMessage(...k){C.frame.postMessage(...k)}},ee=k=>{k.source===C.frame&&(C.loaded=!0,u.removeEventListener("message",ee),C.dispatchEvent(new Event("load")))};return u.addEventListener("message",ee),C}try{new Response(new ReadableStream),w&&!("serviceWorker"in navigator)&&(n=!0)}catch(R){n=!0}L(()=>{let{readable:R}=new TransformStream,m=new MessageChannel;m.port1.postMessage(R,[R]),m.port1.close(),m.port2.close(),S=!0,Object.defineProperty(y,"TransformStream",{configurable:!1,writable:!1,value:TransformStream})});function U(){i||(i=w?N(y.mitm):I(y.mitm))}function V(R,m,H){let C={size:null,pathname:null,writableStrategy:void 0,readableStrategy:void 0},ee=0,k=null,W=null,Z=null;if(Number.isFinite(m)?([H,m]=[m,H],console.warn("[StreamSaver] Depricated pass an object as 2nd argument when creating a write stream"),C.size=H,C.writableStrategy=m):m&&m.highWaterMark?(console.warn("[StreamSaver] Depricated pass an object as 2nd argument when creating a write stream"),C.size=H,C.writableStrategy=m):C=m||{},!n){U(),W=new MessageChannel,R=encodeURIComponent(R.replace(/\//g,":")).replace(/['()]/g,escape).replace(/\*/g,"%2A");let t={transferringReadable:S,pathname:C.pathname||Math.random().toString().slice(-6)+"/"+R,headers:{"Content-Type":"application/octet-stream; charset=utf-8","Content-Disposition":"attachment; filename*=UTF-8''"+R}};C.size&&(t.headers["Content-Length"]=C.size);let e=[t,"*",[W.port2]];if(S){let r=T==="iframe"?void 0:{transform(o,d){if(!(o instanceof Uint8Array))throw new TypeError("Can only wirte Uint8Arrays");ee+=o.length,d.enqueue(o),k&&(location.href=k,k=null)},flush(){k&&(location.href=k)}};Z=new y.TransformStream(r,C.writableStrategy,C.readableStrategy);let s=Z.readable;W.port1.postMessage({readableStream:s},[s])}W.port1.onmessage=r=>{r.data.download&&(T==="navigate"?(i.remove(),i=null,ee?location.href=r.data.download:k=r.data.download):(i.isPopup&&(i.remove(),i=null,T==="iframe"&&N(y.mitm)),N(r.data.download)))},i.loaded?i.postMessage(...e):i.addEventListener("load",()=>{i.postMessage(...e)},{once:!0})}let b=[];return!n&&Z&&Z.writable||new y.WritableStream({write(t){if(!(t instanceof Uint8Array))throw new TypeError("Can only wirte Uint8Arrays");if(n){b.push(t);return}W.port1.postMessage(t),ee+=t.length,k&&(location.href=k,k=null)},close(){if(n){let t=new Blob(b,{type:"application/octet-stream; charset=utf-8"}),e=document.createElement("a");e.href=URL.createObjectURL(t),e.download=R,e.click()}else W.port1.postMessage("end")},abort(){b=[],W.port1.postMessage("abort"),W.port1.onmessage=null,W.port1.close(),W.port2.close(),W=null}},C.writableStrategy)}return y})});var Se=be((ge,ye)=>{(function(u,i){typeof define=="function"&&define.amd?define([],i):typeof ye=="object"&&typeof ge!="undefined"?ye.exports=i():u.Papa=i()})(ge,function u(){"use strict";var i=typeof self!="undefined"?self:typeof window!="undefined"?window:i!==void 0?i:{},S=!i.document&&!!i.postMessage,L=S&&/blob:/i.test((i.location||{}).protocol),M={},w=0,n={parse:function(t,e){var r=(e=e||{}).dynamicTyping||!1;if(b(r)&&(e.dynamicTypingFunction=r,r={}),e.dynamicTyping=r,e.transform=!!b(e.transform)&&e.transform,e.worker&&n.WORKERS_SUPPORTED){var s=function(){if(!n.WORKERS_SUPPORTED)return!1;var d=(q=i.URL||i.webkitURL||null,j=u.toString(),n.BLOB_URL||(n.BLOB_URL=q.createObjectURL(new Blob(["(",j,")();"],{type:"text/javascript"})))),g=new i.Worker(d),q,j;return g.onmessage=C,g.id=w++,M[g.id]=g}();return s.userStep=e.step,s.userChunk=e.chunk,s.userComplete=e.complete,s.userError=e.error,e.step=b(e.step),e.chunk=b(e.chunk),e.complete=b(e.complete),e.error=b(e.error),delete e.worker,void s.postMessage({input:t,config:e,workerId:s.id})}var o=null;return n.NODE_STREAM_INPUT,typeof t=="string"?o=e.download?new N(e):new U(e):t.readable===!0&&b(t.read)&&b(t.on)?o=new V(e):(i.File&&t instanceof File||t instanceof Object)&&(o=new I(e)),o.stream(t)},unparse:function(t,e){var r=!1,s=!0,o=",",d=`\r
`,g='"',q=g+g,j=!1,l=null,A=!1;(function(){if(typeof e=="object"){if(typeof e.delimiter!="string"||n.BAD_DELIMITERS.filter(function(a){return e.delimiter.indexOf(a)!==-1}).length||(o=e.delimiter),(typeof e.quotes=="boolean"||typeof e.quotes=="function"||Array.isArray(e.quotes))&&(r=e.quotes),typeof e.skipEmptyLines!="boolean"&&typeof e.skipEmptyLines!="string"||(j=e.skipEmptyLines),typeof e.newline=="string"&&(d=e.newline),typeof e.quoteChar=="string"&&(g=e.quoteChar),typeof e.header=="boolean"&&(s=e.header),Array.isArray(e.columns)){if(e.columns.length===0)throw new Error("Option columns is empty");l=e.columns}e.escapeChar!==void 0&&(q=e.escapeChar+g),typeof e.escapeFormulae=="boolean"&&(A=e.escapeFormulae)}})();var h=new RegExp(m(g),"g");if(typeof t=="string"&&(t=JSON.parse(t)),Array.isArray(t)){if(!t.length||Array.isArray(t[0]))return re(null,t,j);if(typeof t[0]=="object")return re(l||Object.keys(t[0]),t,j)}else if(typeof t=="object")return typeof t.data=="string"&&(t.data=JSON.parse(t.data)),Array.isArray(t.data)&&(t.fields||(t.fields=t.meta&&t.meta.fields),t.fields||(t.fields=Array.isArray(t.data[0])?t.fields:typeof t.data[0]=="object"?Object.keys(t.data[0]):[]),Array.isArray(t.data[0])||typeof t.data[0]=="object"||(t.data=[t.data])),re(t.fields||[],t.data||[],j);throw new Error("Unable to serialize unrecognized input");function re(a,O,D){var $="";typeof a=="string"&&(a=JSON.parse(a)),typeof O=="string"&&(O=JSON.parse(O));var B=Array.isArray(a)&&0<a.length,P=!Array.isArray(O[0]);if(B&&s){for(var z=0;z<a.length;z++)0<z&&($+=o),$+=K(a[z],z);0<O.length&&($+=d)}for(var c=0;c<O.length;c++){var v=B?a.length:O[c].length,E=!1,x=B?Object.keys(O[c]).length===0:O[c].length===0;if(D&&!B&&(E=D==="greedy"?O[c].join("").trim()==="":O[c].length===1&&O[c][0].length===0),D==="greedy"&&B){for(var _=[],p=0;p<v;p++){var F=P?a[p]:p;_.push(O[c][F])}E=_.join("").trim()===""}if(!E){for(var f=0;f<v;f++){0<f&&!x&&($+=o);var Q=B&&P?a[f]:f;$+=K(O[c][Q],f)}c<O.length-1&&(!D||0<v&&!x)&&($+=d)}}return $}function K(a,O){if(a==null)return"";if(a.constructor===Date)return JSON.stringify(a).slice(1,25);A===!0&&typeof a=="string"&&a.match(/^[=+\-@].*$/)!==null&&(a="'"+a);var D=a.toString().replace(h,q),$=typeof r=="boolean"&&r||typeof r=="function"&&r(a,O)||Array.isArray(r)&&r[O]||function(B,P){for(var z=0;z<P.length;z++)if(-1<B.indexOf(P[z]))return!0;return!1}(D,n.BAD_DELIMITERS)||-1<D.indexOf(o)||D.charAt(0)===" "||D.charAt(D.length-1)===" ";return $?g+D+g:D}}};if(n.RECORD_SEP=String.fromCharCode(30),n.UNIT_SEP=String.fromCharCode(31),n.BYTE_ORDER_MARK="\uFEFF",n.BAD_DELIMITERS=["\r",`
`,'"',n.BYTE_ORDER_MARK],n.WORKERS_SUPPORTED=!S&&!!i.Worker,n.NODE_STREAM_INPUT=1,n.LocalChunkSize=10485760,n.RemoteChunkSize=5242880,n.DefaultDelimiter=",",n.Parser=H,n.ParserHandle=R,n.NetworkStreamer=N,n.FileStreamer=I,n.StringStreamer=U,n.ReadableStreamStreamer=V,i.jQuery){var T=i.jQuery;T.fn.parse=function(t){var e=t.config||{},r=[];return this.each(function(d){if(!(T(this).prop("tagName").toUpperCase()==="INPUT"&&T(this).attr("type").toLowerCase()==="file"&&i.FileReader)||!this.files||this.files.length===0)return!0;for(var g=0;g<this.files.length;g++)r.push({file:this.files[g],inputElem:this,instanceConfig:T.extend({},e)})}),s(),this;function s(){if(r.length!==0){var d,g,q,j,l=r[0];if(b(t.before)){var A=t.before(l.file,l.inputElem);if(typeof A=="object"){if(A.action==="abort")return d="AbortError",g=l.file,q=l.inputElem,j=A.reason,void(b(t.error)&&t.error({name:d},g,q,j));if(A.action==="skip")return void o();typeof A.config=="object"&&(l.instanceConfig=T.extend(l.instanceConfig,A.config))}else if(A==="skip")return void o()}var h=l.instanceConfig.complete;l.instanceConfig.complete=function(re){b(h)&&h(re,l.file,l.inputElem),o()},n.parse(l.file,l.instanceConfig)}else b(t.complete)&&t.complete()}function o(){r.splice(0,1),s()}}}function y(t){this._handle=null,this._finished=!1,this._completed=!1,this._halted=!1,this._input=null,this._baseIndex=0,this._partialLine="",this._rowCount=0,this._start=0,this._nextChunk=null,this.isFirstChunk=!0,this._completeResults={data:[],errors:[],meta:{}},function(e){var r=W(e);r.chunkSize=parseInt(r.chunkSize),e.step||e.chunk||(r.chunkSize=null),this._handle=new R(r),(this._handle.streamer=this)._config=r}.call(this,t),this.parseChunk=function(e,r){if(this.isFirstChunk&&b(this._config.beforeFirstChunk)){var s=this._config.beforeFirstChunk(e);s!==void 0&&(e=s)}this.isFirstChunk=!1,this._halted=!1;var o=this._partialLine+e;this._partialLine="";var d=this._handle.parse(o,this._baseIndex,!this._finished);if(!this._handle.paused()&&!this._handle.aborted()){var g=d.meta.cursor;this._finished||(this._partialLine=o.substring(g-this._baseIndex),this._baseIndex=g),d&&d.data&&(this._rowCount+=d.data.length);var q=this._finished||this._config.preview&&this._rowCount>=this._config.preview;if(L)i.postMessage({results:d,workerId:n.WORKER_ID,finished:q});else if(b(this._config.chunk)&&!r){if(this._config.chunk(d,this._handle),this._handle.paused()||this._handle.aborted())return void(this._halted=!0);d=void 0,this._completeResults=void 0}return this._config.step||this._config.chunk||(this._completeResults.data=this._completeResults.data.concat(d.data),this._completeResults.errors=this._completeResults.errors.concat(d.errors),this._completeResults.meta=d.meta),this._completed||!q||!b(this._config.complete)||d&&d.meta.aborted||(this._config.complete(this._completeResults,this._input),this._completed=!0),q||d&&d.meta.paused||this._nextChunk(),d}this._halted=!0},this._sendError=function(e){b(this._config.error)?this._config.error(e):L&&this._config.error&&i.postMessage({workerId:n.WORKER_ID,error:e,finished:!1})}}function N(t){var e;(t=t||{}).chunkSize||(t.chunkSize=n.RemoteChunkSize),y.call(this,t),this._nextChunk=S?function(){this._readChunk(),this._chunkLoaded()}:function(){this._readChunk()},this.stream=function(r){this._input=r,this._nextChunk()},this._readChunk=function(){if(this._finished)this._chunkLoaded();else{if(e=new XMLHttpRequest,this._config.withCredentials&&(e.withCredentials=this._config.withCredentials),S||(e.onload=Z(this._chunkLoaded,this),e.onerror=Z(this._chunkError,this)),e.open(this._config.downloadRequestBody?"POST":"GET",this._input,!S),this._config.downloadRequestHeaders){var r=this._config.downloadRequestHeaders;for(var s in r)e.setRequestHeader(s,r[s])}if(this._config.chunkSize){var o=this._start+this._config.chunkSize-1;e.setRequestHeader("Range","bytes="+this._start+"-"+o)}try{e.send(this._config.downloadRequestBody)}catch(d){this._chunkError(d.message)}S&&e.status===0&&this._chunkError()}},this._chunkLoaded=function(){e.readyState===4&&(e.status<200||400<=e.status?this._chunkError():(this._start+=this._config.chunkSize?this._config.chunkSize:e.responseText.length,this._finished=!this._config.chunkSize||this._start>=function(r){var s=r.getResponseHeader("Content-Range");return s===null?-1:parseInt(s.substring(s.lastIndexOf("/")+1))}(e),this.parseChunk(e.responseText)))},this._chunkError=function(r){var s=e.statusText||r;this._sendError(new Error(s))}}function I(t){var e,r;(t=t||{}).chunkSize||(t.chunkSize=n.LocalChunkSize),y.call(this,t);var s=typeof FileReader!="undefined";this.stream=function(o){this._input=o,r=o.slice||o.webkitSlice||o.mozSlice,s?((e=new FileReader).onload=Z(this._chunkLoaded,this),e.onerror=Z(this._chunkError,this)):e=new FileReaderSync,this._nextChunk()},this._nextChunk=function(){this._finished||this._config.preview&&!(this._rowCount<this._config.preview)||this._readChunk()},this._readChunk=function(){var o=this._input;if(this._config.chunkSize){var d=Math.min(this._start+this._config.chunkSize,this._input.size);o=r.call(o,this._start,d)}var g=e.readAsText(o,this._config.encoding);s||this._chunkLoaded({target:{result:g}})},this._chunkLoaded=function(o){this._start+=this._config.chunkSize,this._finished=!this._config.chunkSize||this._start>=this._input.size,this.parseChunk(o.target.result)},this._chunkError=function(){this._sendError(e.error)}}function U(t){var e;y.call(this,t=t||{}),this.stream=function(r){return e=r,this._nextChunk()},this._nextChunk=function(){if(!this._finished){var r,s=this._config.chunkSize;return s?(r=e.substring(0,s),e=e.substring(s)):(r=e,e=""),this._finished=!e,this.parseChunk(r)}}}function V(t){y.call(this,t=t||{});var e=[],r=!0,s=!1;this.pause=function(){y.prototype.pause.apply(this,arguments),this._input.pause()},this.resume=function(){y.prototype.resume.apply(this,arguments),this._input.resume()},this.stream=function(o){this._input=o,this._input.on("data",this._streamData),this._input.on("end",this._streamEnd),this._input.on("error",this._streamError)},this._checkIsFinished=function(){s&&e.length===1&&(this._finished=!0)},this._nextChunk=function(){this._checkIsFinished(),e.length?this.parseChunk(e.shift()):r=!0},this._streamData=Z(function(o){try{e.push(typeof o=="string"?o:o.toString(this._config.encoding)),r&&(r=!1,this._checkIsFinished(),this.parseChunk(e.shift()))}catch(d){this._streamError(d)}},this),this._streamError=Z(function(o){this._streamCleanUp(),this._sendError(o)},this),this._streamEnd=Z(function(){this._streamCleanUp(),s=!0,this._streamData("")},this),this._streamCleanUp=Z(function(){this._input.removeListener("data",this._streamData),this._input.removeListener("end",this._streamEnd),this._input.removeListener("error",this._streamError)},this)}function R(t){var e,r,s,o=Math.pow(2,53),d=-o,g=/^\s*-?(\d+\.?|\.\d+|\d+\.\d+)([eE][-+]?\d+)?\s*$/,q=/^(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+([+-][0-2]\d:[0-5]\d|Z))|(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d([+-][0-2]\d:[0-5]\d|Z))|(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d([+-][0-2]\d:[0-5]\d|Z))$/,j=this,l=0,A=0,h=!1,re=!1,K=[],a={data:[],errors:[],meta:{}};if(b(t.step)){var O=t.step;t.step=function(c){if(a=c,B())$();else{if($(),a.data.length===0)return;l+=c.data.length,t.preview&&l>t.preview?r.abort():(a.data=a.data[0],O(a,j))}}}function D(c){return t.skipEmptyLines==="greedy"?c.join("").trim()==="":c.length===1&&c[0].length===0}function $(){if(a&&s&&(z("Delimiter","UndetectableDelimiter","Unable to auto-detect delimiting character; defaulted to '"+n.DefaultDelimiter+"'"),s=!1),t.skipEmptyLines)for(var c=0;c<a.data.length;c++)D(a.data[c])&&a.data.splice(c--,1);return B()&&function(){if(!a)return;function v(x,_){b(t.transformHeader)&&(x=t.transformHeader(x,_)),K.push(x)}if(Array.isArray(a.data[0])){for(var E=0;B()&&E<a.data.length;E++)a.data[E].forEach(v);a.data.splice(0,1)}else a.data.forEach(v)}(),function(){if(!a||!t.header&&!t.dynamicTyping&&!t.transform)return a;function v(x,_){var p,F=t.header?{}:[];for(p=0;p<x.length;p++){var f=p,Q=x[p];t.header&&(f=p>=K.length?"__parsed_extra":K[p]),t.transform&&(Q=t.transform(Q,f)),Q=P(f,Q),f==="__parsed_extra"?(F[f]=F[f]||[],F[f].push(Q)):F[f]=Q}return t.header&&(p>K.length?z("FieldMismatch","TooManyFields","Too many fields: expected "+K.length+" fields but parsed "+p,A+_):p<K.length&&z("FieldMismatch","TooFewFields","Too few fields: expected "+K.length+" fields but parsed "+p,A+_)),F}var E=1;return!a.data.length||Array.isArray(a.data[0])?(a.data=a.data.map(v),E=a.data.length):a.data=v(a.data,0),t.header&&a.meta&&(a.meta.fields=K),A+=E,a}()}function B(){return t.header&&K.length===0}function P(c,v){return E=c,t.dynamicTypingFunction&&t.dynamicTyping[E]===void 0&&(t.dynamicTyping[E]=t.dynamicTypingFunction(E)),(t.dynamicTyping[E]||t.dynamicTyping)===!0?v==="true"||v==="TRUE"||v!=="false"&&v!=="FALSE"&&(function(x){if(g.test(x)){var _=parseFloat(x);if(d<_&&_<o)return!0}return!1}(v)?parseFloat(v):q.test(v)?new Date(v):v===""?null:v):v;var E}function z(c,v,E,x){var _={type:c,code:v,message:E};x!==void 0&&(_.row=x),a.errors.push(_)}this.parse=function(c,v,E){var x=t.quoteChar||'"';if(t.newline||(t.newline=function(F,f){F=F.substring(0,1048576);var Q=new RegExp(m(f)+"([^]*?)"+m(f),"gm"),te=(F=F.replace(Q,"")).split("\r"),G=F.split(`
`),se=1<G.length&&G[0].length<te[0].length;if(te.length===1||se)return`
`;for(var ne=0,Y=0;Y<te.length;Y++)te[Y][0]===`
`&&ne++;return ne>=te.length/2?`\r
`:"\r"}(c,x)),s=!1,t.delimiter)b(t.delimiter)&&(t.delimiter=t.delimiter(c),a.meta.delimiter=t.delimiter);else{var _=function(F,f,Q,te,G){var se,ne,Y,J;G=G||[",","	","|",";",n.RECORD_SEP,n.UNIT_SEP];for(var ae=0;ae<G.length;ae++){var X=G[ae],oe=0,ie=0,_e=0;Y=void 0;for(var le=new H({comments:te,delimiter:X,newline:f,preview:10}).parse(F),ce=0;ce<le.data.length;ce++)if(Q&&D(le.data[ce]))_e++;else{var ue=le.data[ce].length;ie+=ue,Y!==void 0?0<ue&&(oe+=Math.abs(ue-Y),Y=ue):Y=ue}0<le.data.length&&(ie/=le.data.length-_e),(ne===void 0||oe<=ne)&&(J===void 0||J<ie)&&1.99<ie&&(ne=oe,se=X,J=ie)}return{successful:!!(t.delimiter=se),bestDelimiter:se}}(c,t.newline,t.skipEmptyLines,t.comments,t.delimitersToGuess);_.successful?t.delimiter=_.bestDelimiter:(s=!0,t.delimiter=n.DefaultDelimiter),a.meta.delimiter=t.delimiter}var p=W(t);return t.preview&&t.header&&p.preview++,e=c,r=new H(p),a=r.parse(e,v,E),$(),h?{meta:{paused:!0}}:a||{meta:{paused:!1}}},this.paused=function(){return h},this.pause=function(){h=!0,r.abort(),e=b(t.chunk)?"":e.substring(r.getCharIndex())},this.resume=function(){j.streamer._halted?(h=!1,j.streamer.parseChunk(e,!0)):setTimeout(j.resume,3)},this.aborted=function(){return re},this.abort=function(){re=!0,r.abort(),a.meta.aborted=!0,b(t.complete)&&t.complete(a),e=""}}function m(t){return t.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function H(t){var e,r=(t=t||{}).delimiter,s=t.newline,o=t.comments,d=t.step,g=t.preview,q=t.fastMode,j=e=t.quoteChar===void 0?'"':t.quoteChar;if(t.escapeChar!==void 0&&(j=t.escapeChar),(typeof r!="string"||-1<n.BAD_DELIMITERS.indexOf(r))&&(r=","),o===r)throw new Error("Comment character same as delimiter");o===!0?o="#":(typeof o!="string"||-1<n.BAD_DELIMITERS.indexOf(o))&&(o=!1),s!==`
`&&s!=="\r"&&s!==`\r
`&&(s=`
`);var l=0,A=!1;this.parse=function(h,re,K){if(typeof h!="string")throw new Error("Input must be a string");var a=h.length,O=r.length,D=s.length,$=o.length,B=b(d),P=[],z=[],c=[],v=l=0;if(!h)return J();if(q||q!==!1&&h.indexOf(e)===-1){for(var E=h.split(s),x=0;x<E.length;x++){if(c=E[x],l+=c.length,x!==E.length-1)l+=s.length;else if(K)return J();if(!o||c.substring(0,$)!==o){if(B){if(P=[],G(c.split(r)),ae(),A)return J()}else G(c.split(r));if(g&&g<=x)return P=P.slice(0,g),J(!0)}}return J()}for(var _=h.indexOf(r,l),p=h.indexOf(s,l),F=new RegExp(m(j)+m(e),"g"),f=h.indexOf(e,l);;)if(h[l]!==e)if(o&&c.length===0&&h.substring(l,l+$)===o){if(p===-1)return J();l=p+D,p=h.indexOf(s,l),_=h.indexOf(r,l)}else if(_!==-1&&(_<p||p===-1))c.push(h.substring(l,_)),l=_+O,_=h.indexOf(r,l);else{if(p===-1)break;if(c.push(h.substring(l,p)),Y(p+D),B&&(ae(),A))return J();if(g&&P.length>=g)return J(!0)}else for(f=l,l++;;){if((f=h.indexOf(e,f+1))===-1)return K||z.push({type:"Quotes",code:"MissingQuotes",message:"Quoted field unterminated",row:P.length,index:l}),ne();if(f===a-1)return ne(h.substring(l,f).replace(F,e));if(e!==j||h[f+1]!==j){if(e===j||f===0||h[f-1]!==j){_!==-1&&_<f+1&&(_=h.indexOf(r,f+1)),p!==-1&&p<f+1&&(p=h.indexOf(s,f+1));var Q=se(p===-1?_:Math.min(_,p));if(h[f+1+Q]===r){c.push(h.substring(l,f).replace(F,e)),h[l=f+1+Q+O]!==e&&(f=h.indexOf(e,l)),_=h.indexOf(r,l),p=h.indexOf(s,l);break}var te=se(p);if(h.substring(f+1+te,f+1+te+D)===s){if(c.push(h.substring(l,f).replace(F,e)),Y(f+1+te+D),_=h.indexOf(r,l),f=h.indexOf(e,l),B&&(ae(),A))return J();if(g&&P.length>=g)return J(!0);break}z.push({type:"Quotes",code:"InvalidQuotes",message:"Trailing quote on quoted field is malformed",row:P.length,index:l}),f++}}else f++}return ne();function G(X){P.push(X),v=l}function se(X){var oe=0;if(X!==-1){var ie=h.substring(f+1,X);ie&&ie.trim()===""&&(oe=ie.length)}return oe}function ne(X){return K||(X===void 0&&(X=h.substring(l)),c.push(X),l=a,G(c),B&&ae()),J()}function Y(X){l=X,G(c),c=[],p=h.indexOf(s,l)}function J(X){return{data:P,errors:z,meta:{delimiter:r,linebreak:s,aborted:A,truncated:!!X,cursor:v+(re||0)}}}function ae(){d(J()),P=[],z=[]}},this.abort=function(){A=!0},this.getCharIndex=function(){return l}}function C(t){var e=t.data,r=M[e.workerId],s=!1;if(e.error)r.userError(e.error,e.file);else if(e.results&&e.results.data){var o={abort:function(){s=!0,ee(e.workerId,{data:[],errors:[],meta:{aborted:!0}})},pause:k,resume:k};if(b(r.userStep)){for(var d=0;d<e.results.data.length&&(r.userStep({data:e.results.data[d],errors:e.results.errors,meta:e.results.meta},o),!s);d++);delete e.results}else b(r.userChunk)&&(r.userChunk(e.results,o,e.file),delete e.results)}e.finished&&!s&&ee(e.workerId,e.results)}function ee(t,e){var r=M[t];b(r.userComplete)&&r.userComplete(e),r.terminate(),delete M[t]}function k(){throw new Error("Not implemented.")}function W(t){if(typeof t!="object"||t===null)return t;var e=Array.isArray(t)?[]:{};for(var r in t)e[r]=W(t[r]);return e}function Z(t,e){return function(){t.apply(e,arguments)}}function b(t){return typeof t=="function"}return L&&(i.onmessage=function(t){var e=t.data;if(n.WORKER_ID===void 0&&e&&(n.WORKER_ID=e.workerId),typeof e.input=="string")i.postMessage({workerId:n.WORKER_ID,results:n.parse(e.input,e.config),finished:!0});else if(i.File&&e.input instanceof File||e.input instanceof Object){var r=n.parse(e.input,e.config);r&&i.postMessage({workerId:n.WORKER_ID,results:r,finished:!0})}}),(N.prototype=Object.create(y.prototype)).constructor=N,(I.prototype=Object.create(y.prototype)).constructor=I,(U.prototype=Object.create(U.prototype)).constructor=U,(V.prototype=Object.create(y.prototype)).constructor=V,n})});function we(u,i,S){let L=new WebSocket(u);if(!L)throw new Error("server didn't accept ws");return L.addEventListener("open",()=>{console.log("Opened websocket"),S()}),L.addEventListener("message",({data:M})=>{let{count:w,tz:n,error:T,name:y,duration:N,endTime:I}=JSON.parse(M);if(y&&N&&I){let U=I-N,V={name:y,duration:N,startTime:U,entryType:"server",endTime:I};console.info(V),i.push(V)}else T?console.error(T):console.info({count:w,tz:n,error:T})}),L.addEventListener("close",()=>{console.log("Closed websocket")}),L}function ke(u){let i=new PerformanceObserver(M=>{M.getEntries().forEach(w=>{let{startTime:n,duration:T,name:y,entryType:N}=w;n=Math.floor(n),T=Math.floor(T);let I=n+T,U={name:y,endTime:I,startTime:n,duration:T,entryType:N};console.log(U),u.push(U)})}),S=new PerformanceObserver(M=>{M.getEntriesByType("resource").forEach(w=>{let{startTime:n,duration:T,name:y,entryType:N,responseStart:I,responseEnd:U,serverTiming:V,initiatorType:R}=w;y.includes("mitm")||y.includes("favicon")||(n=Math.floor(n),T=Math.floor(T),U=Math.floor(U),I=Math.floor(I),/^https?:\/\//.test(y)&&(y=String(y.split("/").pop())),V.forEach(m=>{let{name:H,duration:C,description:ee}=m,k=Number(ee.replace("endtime:","")),W=k-C;console.log({name:H,duration:C,startTime:W,entryType:"server",endTime:k})}),u=u.concat([{name:`${R}:request_sent`,startTime:n,duration:0,endTime:n,entryType:"mark"},{name:`${R}:response_start`,startTime:n,duration:I-n,endTime:I,entryType:"resource"},{name:`${R}:response_complete`,startTime:I-n,duration:U-I,endTime:U,entryType:"resource"}]),console.log(w.toJSON()))})});return{ro:S,po:i,listEntries:()=>{let M=u.sort((w,n)=>w.endTime-n.endTime).reduce((w,n)=>{let{name:T,endTime:y,startTime:N,duration:I,entryType:U}=n;return w[T]={endTime:y,startTime:N,duration:I,entryType:U},w},{});window.requestIdleCallback(()=>{console.table(M),i&&i.disconnect(),S&&S.disconnect()})}}}var me=ve(Ee());function fe(u,i="file.txt",S){let L=!1;console.log({url:u}),performance.mark("download:start");let M=!1;me.default.mitm=`${location.origin}/mitm.html`;let w=me.default.createWriteStream(i);return window.onunload=()=>{w.abort()},window.onbeforeunload=n=>{M||(n.returnValue="Are you sure you want to leave?")},fetch(u,{headers:{TE:"trailers",startTime:String(performance.now()),started_at:String(Math.floor(Date.now()-performance.now())),"cache-control":"no-cache, no-store, max-age=1, s-maxage=1"}}).then(n=>!n.body||!n.ok?Promise.reject(new Error(n.statusText)):n.body.pipeTo(w)).then(()=>{M=!0,performance.mark("download:tear_down"),requestIdleCallback(()=>{S()})})}var Te=ve(Se());async function Re(u,i,S){performance.mark("XHR:start");let L=!0,M="[",w="";Te.default.parse(u,{download:!0,chunkSize:7*1024*1024,beforeFirstChunk:n=>(performance.mark("XHR:finish"),n),step:n=>{w+=M+JSON.stringify(n.data),M=",",L&&(L=!1,performance.mark("Parse:start"))},complete:()=>{performance.measure("Parse:end","Parse:start"),w+="]";let n=URL.createObjectURL(new Blob([w],{type:"application/json"}));fe(n,"xhr.json",()=>{URL.revokeObjectURL(n),w="",performance.mark("download:tear_down"),S()})}})}var Ce=[],{po:Ue,ro:Fe,listEntries:Oe}=ke(Ce);globalThis.connect=u=>{let i=new URL(window.location.origin);i.protocol="wss",i.pathname="/csv/ws",globalThis.ws=we(i,Ce,u)};globalThis.connect(()=>{Ue.observe({entryTypes:["mark","measure"]}),Fe.observe({entryTypes:["resource"]}),requestIdleCallback(()=>{let u=location.hash.replace("#","")||"fetch.json";u.includes("xhr")?Re("/csv/raw.json","raw.json",()=>{Oe()}):(console.log(u),fe(`/csv/${u}`,u,()=>{Oe()}))})});})();
/* @license
Papa Parse
v5.3.1
https://github.com/mholt/PapaParse
License: MIT
*/
//# sourceMappingURL=data:application/json;base64,
