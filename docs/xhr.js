(()=>{var Re=Object.create;var fe=Object.defineProperty;var Ce=Object.getOwnPropertyDescriptor;var Oe=Object.getOwnPropertyNames;var xe=Object.getPrototypeOf,Le=Object.prototype.hasOwnProperty;var Ie=u=>fe(u,"__esModule",{value:!0});var be=(u,i)=>()=>(i||u((i={exports:{}}).exports,i),i.exports);var Me=(u,i,O)=>{if(i&&typeof i=="object"||typeof i=="function")for(let A of Oe(i))!Le.call(u,A)&&A!=="default"&&fe(u,A,{get:()=>i[A],enumerable:!(O=Ce(i,A))||O.enumerable});return u},we=u=>Me(Ie(fe(u!=null?Re(xe(u)):{},"default",u&&u.__esModule&&"default"in u?{get:()=>u.default,enumerable:!0}:{value:u,enumerable:!0})),u);var Ee=be((de,he)=>{((u,i)=>{typeof he!="undefined"?he.exports=i():typeof define=="function"&&typeof define.amd=="object"?define(i):de[u]=i()})("streamSaver",()=>{"use strict";let u=typeof window=="object"?window:de;u.HTMLElement||console.warn("streamsaver is meant to run on browsers main thread");let i=null,O=!1,A=L=>{try{L()}catch(m){}},z=u.WebStreamsPolyfill||{},I=u.isSecureContext,n=/constructor/i.test(u.HTMLElement)||!!u.safari||!!u.WebKitPoint,E=I||"MozAppearance"in document.documentElement.style?"iframe":"navigate",y={createWriteStream:ee,WritableStream:u.WritableStream||z.WritableStream,supported:!0,version:{full:"2.0.5",major:2,minor:0,dot:5},mitm:"https://jimmywarting.github.io/StreamSaver.js/mitm.html?version=2.0.0"};function N(L){if(!L)throw new Error("meh");let m=document.createElement("iframe");return m.hidden=!0,m.src=L,m.loaded=!1,m.name="iframe",m.isIframe=!0,m.postMessage=(...W)=>m.contentWindow.postMessage(...W),m.addEventListener("load",()=>{m.loaded=!0},{once:!0}),document.body.appendChild(m),m}function x(L){let m="width=200,height=100",W=document.createDocumentFragment(),R={frame:u.open(L,"popup",m),loaded:!1,isIframe:!1,isPopup:!0,remove(){R.frame.close()},addEventListener(...v){W.addEventListener(...v)},dispatchEvent(...v){W.dispatchEvent(...v)},removeEventListener(...v){W.removeEventListener(...v)},postMessage(...v){R.frame.postMessage(...v)}},G=v=>{v.source===R.frame&&(R.loaded=!0,u.removeEventListener("message",G),R.dispatchEvent(new Event("load")))};return u.addEventListener("message",G),R}try{new Response(new ReadableStream),I&&!("serviceWorker"in navigator)&&(n=!0)}catch(L){n=!0}A(()=>{let{readable:L}=new TransformStream,m=new MessageChannel;m.port1.postMessage(L,[L]),m.port1.close(),m.port2.close(),O=!0,Object.defineProperty(y,"TransformStream",{configurable:!1,writable:!1,value:TransformStream})});function D(){i||(i=I?N(y.mitm):x(y.mitm))}function ee(L,m,W){let R={size:null,pathname:null,writableStrategy:void 0,readableStrategy:void 0},G=0,v=null,Q=null,Z=null;if(Number.isFinite(m)?([W,m]=[m,W],console.warn("[StreamSaver] Depricated pass an object as 2nd argument when creating a write stream"),R.size=W,R.writableStrategy=m):m&&m.highWaterMark?(console.warn("[StreamSaver] Depricated pass an object as 2nd argument when creating a write stream"),R.size=W,R.writableStrategy=m):R=m||{},!n){D(),Q=new MessageChannel,L=encodeURIComponent(L.replace(/\//g,":")).replace(/['()]/g,escape).replace(/\*/g,"%2A");let t={transferringReadable:O,pathname:R.pathname||Math.random().toString().slice(-6)+"/"+L,headers:{"Content-Type":"application/octet-stream; charset=utf-8","Content-Disposition":"attachment; filename*=UTF-8''"+L}};R.size&&(t.headers["Content-Length"]=R.size);let e=[t,"*",[Q.port2]];if(O){let r=E==="iframe"?void 0:{transform(o,h){if(!(o instanceof Uint8Array))throw new TypeError("Can only wirte Uint8Arrays");G+=o.length,h.enqueue(o),v&&(location.href=v,v=null)},flush(){v&&(location.href=v)}};Z=new y.TransformStream(r,R.writableStrategy,R.readableStrategy);let s=Z.readable;Q.port1.postMessage({readableStream:s},[s])}Q.port1.onmessage=r=>{r.data.download&&(E==="navigate"?(i.remove(),i=null,G?location.href=r.data.download:v=r.data.download):(i.isPopup&&(i.remove(),i=null,E==="iframe"&&N(y.mitm)),N(r.data.download)))},i.loaded?i.postMessage(...e):i.addEventListener("load",()=>{i.postMessage(...e)},{once:!0})}let b=[];return!n&&Z&&Z.writable||new y.WritableStream({write(t){if(!(t instanceof Uint8Array))throw new TypeError("Can only wirte Uint8Arrays");if(n){b.push(t);return}Q.port1.postMessage(t),G+=t.length,v&&(location.href=v,v=null)},close(){if(n){let t=new Blob(b,{type:"application/octet-stream; charset=utf-8"}),e=document.createElement("a");e.href=URL.createObjectURL(t),e.download=L,e.click()}else Q.port1.postMessage("end")},abort(){b=[],Q.port1.postMessage("abort"),Q.port1.onmessage=null,Q.port1.close(),Q.port2.close(),Q=null}},R.writableStrategy)}return y})});var Se=be((ge,ye)=>{(function(u,i){typeof define=="function"&&define.amd?define([],i):typeof ye=="object"&&typeof ge!="undefined"?ye.exports=i():u.Papa=i()})(ge,function u(){"use strict";var i=typeof self!="undefined"?self:typeof window!="undefined"?window:i!==void 0?i:{},O=!i.document&&!!i.postMessage,A=O&&/blob:/i.test((i.location||{}).protocol),z={},I=0,n={parse:function(t,e){var r=(e=e||{}).dynamicTyping||!1;if(b(r)&&(e.dynamicTypingFunction=r,r={}),e.dynamicTyping=r,e.transform=!!b(e.transform)&&e.transform,e.worker&&n.WORKERS_SUPPORTED){var s=function(){if(!n.WORKERS_SUPPORTED)return!1;var h=(q=i.URL||i.webkitURL||null,C=u.toString(),n.BLOB_URL||(n.BLOB_URL=q.createObjectURL(new Blob(["(",C,")();"],{type:"text/javascript"})))),g=new i.Worker(h),q,C;return g.onmessage=R,g.id=I++,z[g.id]=g}();return s.userStep=e.step,s.userChunk=e.chunk,s.userComplete=e.complete,s.userError=e.error,e.step=b(e.step),e.chunk=b(e.chunk),e.complete=b(e.complete),e.error=b(e.error),delete e.worker,void s.postMessage({input:t,config:e,workerId:s.id})}var o=null;return n.NODE_STREAM_INPUT,typeof t=="string"?o=e.download?new N(e):new D(e):t.readable===!0&&b(t.read)&&b(t.on)?o=new ee(e):(i.File&&t instanceof File||t instanceof Object)&&(o=new x(e)),o.stream(t)},unparse:function(t,e){var r=!1,s=!0,o=",",h=`\r
`,g='"',q=g+g,C=!1,l=null,M=!1;(function(){if(typeof e=="object"){if(typeof e.delimiter!="string"||n.BAD_DELIMITERS.filter(function(a){return e.delimiter.indexOf(a)!==-1}).length||(o=e.delimiter),(typeof e.quotes=="boolean"||typeof e.quotes=="function"||Array.isArray(e.quotes))&&(r=e.quotes),typeof e.skipEmptyLines!="boolean"&&typeof e.skipEmptyLines!="string"||(C=e.skipEmptyLines),typeof e.newline=="string"&&(h=e.newline),typeof e.quoteChar=="string"&&(g=e.quoteChar),typeof e.header=="boolean"&&(s=e.header),Array.isArray(e.columns)){if(e.columns.length===0)throw new Error("Option columns is empty");l=e.columns}e.escapeChar!==void 0&&(q=e.escapeChar+g),typeof e.escapeFormulae=="boolean"&&(M=e.escapeFormulae)}})();var d=new RegExp(m(g),"g");if(typeof t=="string"&&(t=JSON.parse(t)),Array.isArray(t)){if(!t.length||Array.isArray(t[0]))return re(null,t,C);if(typeof t[0]=="object")return re(l||Object.keys(t[0]),t,C)}else if(typeof t=="object")return typeof t.data=="string"&&(t.data=JSON.parse(t.data)),Array.isArray(t.data)&&(t.fields||(t.fields=t.meta&&t.meta.fields),t.fields||(t.fields=Array.isArray(t.data[0])?t.fields:typeof t.data[0]=="object"?Object.keys(t.data[0]):[]),Array.isArray(t.data[0])||typeof t.data[0]=="object"||(t.data=[t.data])),re(t.fields||[],t.data||[],C);throw new Error("Unable to serialize unrecognized input");function re(a,S,j){var K="";typeof a=="string"&&(a=JSON.parse(a)),typeof S=="string"&&(S=JSON.parse(S));var B=Array.isArray(a)&&0<a.length,F=!Array.isArray(S[0]);if(B&&s){for(var P=0;P<a.length;P++)0<P&&(K+=o),K+=H(a[P],P);0<S.length&&(K+=h)}for(var c=0;c<S.length;c++){var w=B?a.length:S[c].length,k=!1,T=B?Object.keys(S[c]).length===0:S[c].length===0;if(j&&!B&&(k=j==="greedy"?S[c].join("").trim()==="":S[c].length===1&&S[c][0].length===0),j==="greedy"&&B){for(var _=[],p=0;p<w;p++){var U=F?a[p]:p;_.push(S[c][U])}k=_.join("").trim()===""}if(!k){for(var f=0;f<w;f++){0<f&&!T&&(K+=o);var $=B&&F?a[f]:f;K+=H(S[c][$],f)}c<S.length-1&&(!j||0<w&&!T)&&(K+=h)}}return K}function H(a,S){if(a==null)return"";if(a.constructor===Date)return JSON.stringify(a).slice(1,25);M===!0&&typeof a=="string"&&a.match(/^[=+\-@].*$/)!==null&&(a="'"+a);var j=a.toString().replace(d,q),K=typeof r=="boolean"&&r||typeof r=="function"&&r(a,S)||Array.isArray(r)&&r[S]||function(B,F){for(var P=0;P<F.length;P++)if(-1<B.indexOf(F[P]))return!0;return!1}(j,n.BAD_DELIMITERS)||-1<j.indexOf(o)||j.charAt(0)===" "||j.charAt(j.length-1)===" ";return K?g+j+g:j}}};if(n.RECORD_SEP=String.fromCharCode(30),n.UNIT_SEP=String.fromCharCode(31),n.BYTE_ORDER_MARK="\uFEFF",n.BAD_DELIMITERS=["\r",`
`,'"',n.BYTE_ORDER_MARK],n.WORKERS_SUPPORTED=!O&&!!i.Worker,n.NODE_STREAM_INPUT=1,n.LocalChunkSize=10485760,n.RemoteChunkSize=5242880,n.DefaultDelimiter=",",n.Parser=W,n.ParserHandle=L,n.NetworkStreamer=N,n.FileStreamer=x,n.StringStreamer=D,n.ReadableStreamStreamer=ee,i.jQuery){var E=i.jQuery;E.fn.parse=function(t){var e=t.config||{},r=[];return this.each(function(h){if(!(E(this).prop("tagName").toUpperCase()==="INPUT"&&E(this).attr("type").toLowerCase()==="file"&&i.FileReader)||!this.files||this.files.length===0)return!0;for(var g=0;g<this.files.length;g++)r.push({file:this.files[g],inputElem:this,instanceConfig:E.extend({},e)})}),s(),this;function s(){if(r.length!==0){var h,g,q,C,l=r[0];if(b(t.before)){var M=t.before(l.file,l.inputElem);if(typeof M=="object"){if(M.action==="abort")return h="AbortError",g=l.file,q=l.inputElem,C=M.reason,void(b(t.error)&&t.error({name:h},g,q,C));if(M.action==="skip")return void o();typeof M.config=="object"&&(l.instanceConfig=E.extend(l.instanceConfig,M.config))}else if(M==="skip")return void o()}var d=l.instanceConfig.complete;l.instanceConfig.complete=function(re){b(d)&&d(re,l.file,l.inputElem),o()},n.parse(l.file,l.instanceConfig)}else b(t.complete)&&t.complete()}function o(){r.splice(0,1),s()}}}function y(t){this._handle=null,this._finished=!1,this._completed=!1,this._halted=!1,this._input=null,this._baseIndex=0,this._partialLine="",this._rowCount=0,this._start=0,this._nextChunk=null,this.isFirstChunk=!0,this._completeResults={data:[],errors:[],meta:{}},function(e){var r=Q(e);r.chunkSize=parseInt(r.chunkSize),e.step||e.chunk||(r.chunkSize=null),this._handle=new L(r),(this._handle.streamer=this)._config=r}.call(this,t),this.parseChunk=function(e,r){if(this.isFirstChunk&&b(this._config.beforeFirstChunk)){var s=this._config.beforeFirstChunk(e);s!==void 0&&(e=s)}this.isFirstChunk=!1,this._halted=!1;var o=this._partialLine+e;this._partialLine="";var h=this._handle.parse(o,this._baseIndex,!this._finished);if(!this._handle.paused()&&!this._handle.aborted()){var g=h.meta.cursor;this._finished||(this._partialLine=o.substring(g-this._baseIndex),this._baseIndex=g),h&&h.data&&(this._rowCount+=h.data.length);var q=this._finished||this._config.preview&&this._rowCount>=this._config.preview;if(A)i.postMessage({results:h,workerId:n.WORKER_ID,finished:q});else if(b(this._config.chunk)&&!r){if(this._config.chunk(h,this._handle),this._handle.paused()||this._handle.aborted())return void(this._halted=!0);h=void 0,this._completeResults=void 0}return this._config.step||this._config.chunk||(this._completeResults.data=this._completeResults.data.concat(h.data),this._completeResults.errors=this._completeResults.errors.concat(h.errors),this._completeResults.meta=h.meta),this._completed||!q||!b(this._config.complete)||h&&h.meta.aborted||(this._config.complete(this._completeResults,this._input),this._completed=!0),q||h&&h.meta.paused||this._nextChunk(),h}this._halted=!0},this._sendError=function(e){b(this._config.error)?this._config.error(e):A&&this._config.error&&i.postMessage({workerId:n.WORKER_ID,error:e,finished:!1})}}function N(t){var e;(t=t||{}).chunkSize||(t.chunkSize=n.RemoteChunkSize),y.call(this,t),this._nextChunk=O?function(){this._readChunk(),this._chunkLoaded()}:function(){this._readChunk()},this.stream=function(r){this._input=r,this._nextChunk()},this._readChunk=function(){if(this._finished)this._chunkLoaded();else{if(e=new XMLHttpRequest,this._config.withCredentials&&(e.withCredentials=this._config.withCredentials),O||(e.onload=Z(this._chunkLoaded,this),e.onerror=Z(this._chunkError,this)),e.open(this._config.downloadRequestBody?"POST":"GET",this._input,!O),this._config.downloadRequestHeaders){var r=this._config.downloadRequestHeaders;for(var s in r)e.setRequestHeader(s,r[s])}if(this._config.chunkSize){var o=this._start+this._config.chunkSize-1;e.setRequestHeader("Range","bytes="+this._start+"-"+o)}try{e.send(this._config.downloadRequestBody)}catch(h){this._chunkError(h.message)}O&&e.status===0&&this._chunkError()}},this._chunkLoaded=function(){e.readyState===4&&(e.status<200||400<=e.status?this._chunkError():(this._start+=this._config.chunkSize?this._config.chunkSize:e.responseText.length,this._finished=!this._config.chunkSize||this._start>=function(r){var s=r.getResponseHeader("Content-Range");return s===null?-1:parseInt(s.substring(s.lastIndexOf("/")+1))}(e),this.parseChunk(e.responseText)))},this._chunkError=function(r){var s=e.statusText||r;this._sendError(new Error(s))}}function x(t){var e,r;(t=t||{}).chunkSize||(t.chunkSize=n.LocalChunkSize),y.call(this,t);var s=typeof FileReader!="undefined";this.stream=function(o){this._input=o,r=o.slice||o.webkitSlice||o.mozSlice,s?((e=new FileReader).onload=Z(this._chunkLoaded,this),e.onerror=Z(this._chunkError,this)):e=new FileReaderSync,this._nextChunk()},this._nextChunk=function(){this._finished||this._config.preview&&!(this._rowCount<this._config.preview)||this._readChunk()},this._readChunk=function(){var o=this._input;if(this._config.chunkSize){var h=Math.min(this._start+this._config.chunkSize,this._input.size);o=r.call(o,this._start,h)}var g=e.readAsText(o,this._config.encoding);s||this._chunkLoaded({target:{result:g}})},this._chunkLoaded=function(o){this._start+=this._config.chunkSize,this._finished=!this._config.chunkSize||this._start>=this._input.size,this.parseChunk(o.target.result)},this._chunkError=function(){this._sendError(e.error)}}function D(t){var e;y.call(this,t=t||{}),this.stream=function(r){return e=r,this._nextChunk()},this._nextChunk=function(){if(!this._finished){var r,s=this._config.chunkSize;return s?(r=e.substring(0,s),e=e.substring(s)):(r=e,e=""),this._finished=!e,this.parseChunk(r)}}}function ee(t){y.call(this,t=t||{});var e=[],r=!0,s=!1;this.pause=function(){y.prototype.pause.apply(this,arguments),this._input.pause()},this.resume=function(){y.prototype.resume.apply(this,arguments),this._input.resume()},this.stream=function(o){this._input=o,this._input.on("data",this._streamData),this._input.on("end",this._streamEnd),this._input.on("error",this._streamError)},this._checkIsFinished=function(){s&&e.length===1&&(this._finished=!0)},this._nextChunk=function(){this._checkIsFinished(),e.length?this.parseChunk(e.shift()):r=!0},this._streamData=Z(function(o){try{e.push(typeof o=="string"?o:o.toString(this._config.encoding)),r&&(r=!1,this._checkIsFinished(),this.parseChunk(e.shift()))}catch(h){this._streamError(h)}},this),this._streamError=Z(function(o){this._streamCleanUp(),this._sendError(o)},this),this._streamEnd=Z(function(){this._streamCleanUp(),s=!0,this._streamData("")},this),this._streamCleanUp=Z(function(){this._input.removeListener("data",this._streamData),this._input.removeListener("end",this._streamEnd),this._input.removeListener("error",this._streamError)},this)}function L(t){var e,r,s,o=Math.pow(2,53),h=-o,g=/^\s*-?(\d+\.?|\.\d+|\d+\.\d+)([eE][-+]?\d+)?\s*$/,q=/^(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+([+-][0-2]\d:[0-5]\d|Z))|(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d([+-][0-2]\d:[0-5]\d|Z))|(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d([+-][0-2]\d:[0-5]\d|Z))$/,C=this,l=0,M=0,d=!1,re=!1,H=[],a={data:[],errors:[],meta:{}};if(b(t.step)){var S=t.step;t.step=function(c){if(a=c,B())K();else{if(K(),a.data.length===0)return;l+=c.data.length,t.preview&&l>t.preview?r.abort():(a.data=a.data[0],S(a,C))}}}function j(c){return t.skipEmptyLines==="greedy"?c.join("").trim()==="":c.length===1&&c[0].length===0}function K(){if(a&&s&&(P("Delimiter","UndetectableDelimiter","Unable to auto-detect delimiting character; defaulted to '"+n.DefaultDelimiter+"'"),s=!1),t.skipEmptyLines)for(var c=0;c<a.data.length;c++)j(a.data[c])&&a.data.splice(c--,1);return B()&&function(){if(!a)return;function w(T,_){b(t.transformHeader)&&(T=t.transformHeader(T,_)),H.push(T)}if(Array.isArray(a.data[0])){for(var k=0;B()&&k<a.data.length;k++)a.data[k].forEach(w);a.data.splice(0,1)}else a.data.forEach(w)}(),function(){if(!a||!t.header&&!t.dynamicTyping&&!t.transform)return a;function w(T,_){var p,U=t.header?{}:[];for(p=0;p<T.length;p++){var f=p,$=T[p];t.header&&(f=p>=H.length?"__parsed_extra":H[p]),t.transform&&($=t.transform($,f)),$=F(f,$),f==="__parsed_extra"?(U[f]=U[f]||[],U[f].push($)):U[f]=$}return t.header&&(p>H.length?P("FieldMismatch","TooManyFields","Too many fields: expected "+H.length+" fields but parsed "+p,M+_):p<H.length&&P("FieldMismatch","TooFewFields","Too few fields: expected "+H.length+" fields but parsed "+p,M+_)),U}var k=1;return!a.data.length||Array.isArray(a.data[0])?(a.data=a.data.map(w),k=a.data.length):a.data=w(a.data,0),t.header&&a.meta&&(a.meta.fields=H),M+=k,a}()}function B(){return t.header&&H.length===0}function F(c,w){return k=c,t.dynamicTypingFunction&&t.dynamicTyping[k]===void 0&&(t.dynamicTyping[k]=t.dynamicTypingFunction(k)),(t.dynamicTyping[k]||t.dynamicTyping)===!0?w==="true"||w==="TRUE"||w!=="false"&&w!=="FALSE"&&(function(T){if(g.test(T)){var _=parseFloat(T);if(h<_&&_<o)return!0}return!1}(w)?parseFloat(w):q.test(w)?new Date(w):w===""?null:w):w;var k}function P(c,w,k,T){var _={type:c,code:w,message:k};T!==void 0&&(_.row=T),a.errors.push(_)}this.parse=function(c,w,k){var T=t.quoteChar||'"';if(t.newline||(t.newline=function(U,f){U=U.substring(0,1048576);var $=new RegExp(m(f)+"([^]*?)"+m(f),"gm"),te=(U=U.replace($,"")).split("\r"),Y=U.split(`
`),se=1<Y.length&&Y[0].length<te[0].length;if(te.length===1||se)return`
`;for(var ne=0,V=0;V<te.length;V++)te[V][0]===`
`&&ne++;return ne>=te.length/2?`\r
`:"\r"}(c,T)),s=!1,t.delimiter)b(t.delimiter)&&(t.delimiter=t.delimiter(c),a.meta.delimiter=t.delimiter);else{var _=function(U,f,$,te,Y){var se,ne,V,J;Y=Y||[",","	","|",";",n.RECORD_SEP,n.UNIT_SEP];for(var ae=0;ae<Y.length;ae++){var X=Y[ae],oe=0,ie=0,_e=0;V=void 0;for(var le=new W({comments:te,delimiter:X,newline:f,preview:10}).parse(U),ce=0;ce<le.data.length;ce++)if($&&j(le.data[ce]))_e++;else{var ue=le.data[ce].length;ie+=ue,V!==void 0?0<ue&&(oe+=Math.abs(ue-V),V=ue):V=ue}0<le.data.length&&(ie/=le.data.length-_e),(ne===void 0||oe<=ne)&&(J===void 0||J<ie)&&1.99<ie&&(ne=oe,se=X,J=ie)}return{successful:!!(t.delimiter=se),bestDelimiter:se}}(c,t.newline,t.skipEmptyLines,t.comments,t.delimitersToGuess);_.successful?t.delimiter=_.bestDelimiter:(s=!0,t.delimiter=n.DefaultDelimiter),a.meta.delimiter=t.delimiter}var p=Q(t);return t.preview&&t.header&&p.preview++,e=c,r=new W(p),a=r.parse(e,w,k),K(),d?{meta:{paused:!0}}:a||{meta:{paused:!1}}},this.paused=function(){return d},this.pause=function(){d=!0,r.abort(),e=b(t.chunk)?"":e.substring(r.getCharIndex())},this.resume=function(){C.streamer._halted?(d=!1,C.streamer.parseChunk(e,!0)):setTimeout(C.resume,3)},this.aborted=function(){return re},this.abort=function(){re=!0,r.abort(),a.meta.aborted=!0,b(t.complete)&&t.complete(a),e=""}}function m(t){return t.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function W(t){var e,r=(t=t||{}).delimiter,s=t.newline,o=t.comments,h=t.step,g=t.preview,q=t.fastMode,C=e=t.quoteChar===void 0?'"':t.quoteChar;if(t.escapeChar!==void 0&&(C=t.escapeChar),(typeof r!="string"||-1<n.BAD_DELIMITERS.indexOf(r))&&(r=","),o===r)throw new Error("Comment character same as delimiter");o===!0?o="#":(typeof o!="string"||-1<n.BAD_DELIMITERS.indexOf(o))&&(o=!1),s!==`
`&&s!=="\r"&&s!==`\r
`&&(s=`
`);var l=0,M=!1;this.parse=function(d,re,H){if(typeof d!="string")throw new Error("Input must be a string");var a=d.length,S=r.length,j=s.length,K=o.length,B=b(h),F=[],P=[],c=[],w=l=0;if(!d)return J();if(q||q!==!1&&d.indexOf(e)===-1){for(var k=d.split(s),T=0;T<k.length;T++){if(c=k[T],l+=c.length,T!==k.length-1)l+=s.length;else if(H)return J();if(!o||c.substring(0,K)!==o){if(B){if(F=[],Y(c.split(r)),ae(),M)return J()}else Y(c.split(r));if(g&&g<=T)return F=F.slice(0,g),J(!0)}}return J()}for(var _=d.indexOf(r,l),p=d.indexOf(s,l),U=new RegExp(m(C)+m(e),"g"),f=d.indexOf(e,l);;)if(d[l]!==e)if(o&&c.length===0&&d.substring(l,l+K)===o){if(p===-1)return J();l=p+j,p=d.indexOf(s,l),_=d.indexOf(r,l)}else if(_!==-1&&(_<p||p===-1))c.push(d.substring(l,_)),l=_+S,_=d.indexOf(r,l);else{if(p===-1)break;if(c.push(d.substring(l,p)),V(p+j),B&&(ae(),M))return J();if(g&&F.length>=g)return J(!0)}else for(f=l,l++;;){if((f=d.indexOf(e,f+1))===-1)return H||P.push({type:"Quotes",code:"MissingQuotes",message:"Quoted field unterminated",row:F.length,index:l}),ne();if(f===a-1)return ne(d.substring(l,f).replace(U,e));if(e!==C||d[f+1]!==C){if(e===C||f===0||d[f-1]!==C){_!==-1&&_<f+1&&(_=d.indexOf(r,f+1)),p!==-1&&p<f+1&&(p=d.indexOf(s,f+1));var $=se(p===-1?_:Math.min(_,p));if(d[f+1+$]===r){c.push(d.substring(l,f).replace(U,e)),d[l=f+1+$+S]!==e&&(f=d.indexOf(e,l)),_=d.indexOf(r,l),p=d.indexOf(s,l);break}var te=se(p);if(d.substring(f+1+te,f+1+te+j)===s){if(c.push(d.substring(l,f).replace(U,e)),V(f+1+te+j),_=d.indexOf(r,l),f=d.indexOf(e,l),B&&(ae(),M))return J();if(g&&F.length>=g)return J(!0);break}P.push({type:"Quotes",code:"InvalidQuotes",message:"Trailing quote on quoted field is malformed",row:F.length,index:l}),f++}}else f++}return ne();function Y(X){F.push(X),w=l}function se(X){var oe=0;if(X!==-1){var ie=d.substring(f+1,X);ie&&ie.trim()===""&&(oe=ie.length)}return oe}function ne(X){return H||(X===void 0&&(X=d.substring(l)),c.push(X),l=a,Y(c),B&&ae()),J()}function V(X){l=X,Y(c),c=[],p=d.indexOf(s,l)}function J(X){return{data:F,errors:P,meta:{delimiter:r,linebreak:s,aborted:M,truncated:!!X,cursor:w+(re||0)}}}function ae(){h(J()),F=[],P=[]}},this.abort=function(){M=!0},this.getCharIndex=function(){return l}}function R(t){var e=t.data,r=z[e.workerId],s=!1;if(e.error)r.userError(e.error,e.file);else if(e.results&&e.results.data){var o={abort:function(){s=!0,G(e.workerId,{data:[],errors:[],meta:{aborted:!0}})},pause:v,resume:v};if(b(r.userStep)){for(var h=0;h<e.results.data.length&&(r.userStep({data:e.results.data[h],errors:e.results.errors,meta:e.results.meta},o),!s);h++);delete e.results}else b(r.userChunk)&&(r.userChunk(e.results,o,e.file),delete e.results)}e.finished&&!s&&G(e.workerId,e.results)}function G(t,e){var r=z[t];b(r.userComplete)&&r.userComplete(e),r.terminate(),delete z[t]}function v(){throw new Error("Not implemented.")}function Q(t){if(typeof t!="object"||t===null)return t;var e=Array.isArray(t)?[]:{};for(var r in t)e[r]=Q(t[r]);return e}function Z(t,e){return function(){t.apply(e,arguments)}}function b(t){return typeof t=="function"}return A&&(i.onmessage=function(t){var e=t.data;if(n.WORKER_ID===void 0&&e&&(n.WORKER_ID=e.workerId),typeof e.input=="string")i.postMessage({workerId:n.WORKER_ID,results:n.parse(e.input,e.config),finished:!0});else if(i.File&&e.input instanceof File||e.input instanceof Object){var r=n.parse(e.input,e.config);r&&i.postMessage({workerId:n.WORKER_ID,results:r,finished:!0})}}),(N.prototype=Object.create(y.prototype)).constructor=N,(x.prototype=Object.create(y.prototype)).constructor=x,(D.prototype=Object.create(D.prototype)).constructor=D,(ee.prototype=Object.create(y.prototype)).constructor=ee,n})});async function ve(u,i,O){let A=new WebSocket(u);if(!A)throw new Error("server didn't accept ws");return A.addEventListener("open",()=>{console.log("Opened websocket"),O()}),A.addEventListener("message",({data:z})=>{let{count:I,tz:n,error:E,name:y,duration:N,endTime:x}=JSON.parse(z);if(y&&N&&x){let D=x-N,ee={name:y,duration:N,startTime:D,entryType:"server",endTime:x};console.info(ee),i.push(ee)}else E?console.error(E):console.info({count:I,tz:n,error:E})}),A.addEventListener("close",()=>{console.log("Closed websocket")}),A}function ke(u){let i=new PerformanceObserver(z=>{z.getEntries().forEach(I=>{let{startTime:n,duration:E,name:y,entryType:N}=I;n=Math.floor(n),E=Math.floor(E);let x=n+E,D={name:y,endTime:x,startTime:n,duration:E,entryType:N};console.log(D),u.push(D)})}),O=new PerformanceObserver(z=>{z.getEntriesByType("resource").forEach(I=>{let{startTime:n,duration:E,name:y,entryType:N,responseStart:x,responseEnd:D,serverTiming:ee}=I;y.includes("mitm")||y.includes("favicon")||(n=Math.floor(n),E=Math.floor(E),D=Math.floor(D),x=Math.floor(x),/^https?:\/\//.test(y)&&(y=String(y.split("/").pop())),ee.forEach(L=>{let{name:m,duration:W,description:R}=L,G=Number(R.replace("endtime:","")),v=G-W;console.log({name:m,duration:W,startTime:v,entryType:"server",endTime:G})}),u=u.concat([{name:"download:request_sent",startTime:n,duration:0,endTime:n,entryType:"mark"},{name:"download:response_start",startTime:n,duration:x-n,endTime:x,entryType:"resource"},{name:"download:response_complete",startTime:x-n,duration:D-x,endTime:D,entryType:"resource"}]),console.log(I.toJSON()))})});return{ro:O,po:i,listEntries:()=>{let z=u.sort((I,n)=>I.endTime-n.endTime).reduce((I,n)=>{let{name:E,endTime:y,startTime:N,duration:x,entryType:D}=n;return I[E]={endTime:y,startTime:N,duration:x,entryType:D},I},{});window.requestIdleCallback(()=>{console.table(z),i&&i.disconnect(),O&&O.disconnect()})}}}var pe=we(Ee());function me(u,i="file.txt",O){let A=!1;console.log({url:u}),performance.mark("download:start");let z=!1;pe.default.mitm=`${location.origin}/mitm.html`;let I=pe.default.createWriteStream(i);return window.onunload=()=>{I.abort()},window.onbeforeunload=n=>{z||(n.returnValue="Are you sure you want to leave?")},fetch(u,{headers:{TE:"trailers",startTime:String(performance.now()),started_at:String(Math.floor(Date.now()-performance.now())),"cache-control":"no-cache, no-store, max-age=1, s-maxage=1"}}).then(n=>!n.body||!n.ok?Promise.reject(new Error(n.statusText)):n.body.pipeTo(I)).then(()=>{z=!0,performance.mark("download:tear_down"),requestIdleCallback(()=>{O()})})}var je=we(Se());var Te=[],{po:Ae,ro:De,listEntries:Ue}=ke(Te);globalThis.connect=u=>{let i=new URL(window.location.origin);i.protocol="wss",i.pathname="/csv/ws",globalThis.ws=ve(i,Te,u)};globalThis.connect(()=>{Ae.observe({entryTypes:["mark","measure"]}),De.observe({entryTypes:["resource"]}),requestIdleCallback(()=>{let u=location.hash.replace("#","")||"fetch.json";console.log(u),me(`/csv/${u}`,u,()=>{Ue()})})});})();
/* @license
Papa Parse
v5.3.1
https://github.com/mholt/PapaParse
License: MIT
*/
//# sourceMappingURL=data:application/json;base64,
