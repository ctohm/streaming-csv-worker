(()=>{var Ce=Object.create;var fe=Object.defineProperty;var Oe=Object.getOwnPropertyDescriptor;var xe=Object.getOwnPropertyNames;var Le=Object.getPrototypeOf,Ie=Object.prototype.hasOwnProperty;var Me=d=>fe(d,"__esModule",{value:!0});var we=(d,a)=>()=>(a||d((a={exports:{}}).exports,a),a.exports);var je=(d,a,v)=>{if(a&&typeof a=="object"||typeof a=="function")for(let K of xe(a))!Ie.call(d,K)&&K!=="default"&&fe(d,K,{get:()=>a[K],enumerable:!(v=Oe(a,K))||v.enumerable});return d},ve=d=>je(Me(fe(d!=null?Ce(Le(d)):{},"default",d&&d.__esModule&&"default"in d?{get:()=>d.default,enumerable:!0}:{value:d,enumerable:!0})),d);var Se=we((de,he)=>{((d,a)=>{typeof he!="undefined"?he.exports=a():typeof define=="function"&&typeof define.amd=="object"?define(a):de[d]=a()})("streamSaver",()=>{"use strict";let d=typeof window=="object"?window:de;d.HTMLElement||console.warn("streamsaver is meant to run on browsers main thread");let a=null,v=!1,K=j=>{try{j()}catch(g){}},F=d.WebStreamsPolyfill||{},O=d.isSecureContext,n=/constructor/i.test(d.HTMLElement)||!!d.safari||!!d.WebKitPoint,R=O||"MozAppearance"in document.documentElement.style?"iframe":"navigate",y={createWriteStream:ae,WritableStream:d.WritableStream||F.WritableStream,supported:!0,version:{full:"2.0.5",major:2,minor:0,dot:5},mitm:"https://jimmywarting.github.io/StreamSaver.js/mitm.html?version=2.0.0"};function P(j){if(!j)throw new Error("meh");let g=document.createElement("iframe");return g.hidden=!0,g.src=j,g.loaded=!1,g.name="iframe",g.isIframe=!0,g.postMessage=(...$)=>g.contentWindow.postMessage(...$),g.addEventListener("load",()=>{g.loaded=!0},{once:!0}),document.body.appendChild(g),g}function M(j){let g="width=200,height=100",$=document.createDocumentFragment(),x={frame:d.open(j,"popup",g),loaded:!1,isIframe:!1,isPopup:!0,remove(){x.frame.close()},addEventListener(...T){$.addEventListener(...T)},dispatchEvent(...T){$.dispatchEvent(...T)},removeEventListener(...T){$.removeEventListener(...T)},postMessage(...T){x.frame.postMessage(...T)}},re=T=>{T.source===x.frame&&(x.loaded=!0,d.removeEventListener("message",re),x.dispatchEvent(new Event("load")))};return d.addEventListener("message",re),x}try{new Response(new ReadableStream),O&&!("serviceWorker"in navigator)&&(n=!0)}catch(j){n=!0}K(()=>{let{readable:j}=new TransformStream,g=new MessageChannel;g.port1.postMessage(j,[j]),g.port1.close(),g.port2.close(),v=!0,Object.defineProperty(y,"TransformStream",{configurable:!1,writable:!1,value:TransformStream})});function z(){a||(a=O?P(y.mitm):M(y.mitm))}function ae(j,g,$){let x={size:null,pathname:null,writableStrategy:void 0,readableStrategy:void 0},re=0,T=null,J=null,Z=null;if(Number.isFinite(g)?([$,g]=[g,$],console.warn("[StreamSaver] Depricated pass an object as 2nd argument when creating a write stream"),x.size=$,x.writableStrategy=g):g&&g.highWaterMark?(console.warn("[StreamSaver] Depricated pass an object as 2nd argument when creating a write stream"),x.size=$,x.writableStrategy=g):x=g||{},!n){z(),J=new MessageChannel,j=encodeURIComponent(j.replace(/\//g,":")).replace(/['()]/g,escape).replace(/\*/g,"%2A");let t={transferringReadable:v,pathname:x.pathname||Math.random().toString().slice(-6)+"/"+j,headers:{"Content-Type":"application/octet-stream; charset=utf-8","Content-Disposition":"attachment; filename*=UTF-8''"+j}};x.size&&(t.headers["Content-Length"]=x.size);let e=[t,"*",[J.port2]];if(v){let r=R==="iframe"?void 0:{transform(o,h){if(!(o instanceof Uint8Array))throw new TypeError("Can only wirte Uint8Arrays");re+=o.length,h.enqueue(o),T&&(location.href=T,T=null)},flush(){T&&(location.href=T)}};Z=new y.TransformStream(r,x.writableStrategy,x.readableStrategy);let i=Z.readable;J.port1.postMessage({readableStream:i},[i])}J.port1.onmessage=r=>{r.data.download&&(R==="navigate"?(a.remove(),a=null,re?location.href=r.data.download:T=r.data.download):(a.isPopup&&(a.remove(),a=null,R==="iframe"&&P(y.mitm)),P(r.data.download)))},a.loaded?a.postMessage(...e):a.addEventListener("load",()=>{a.postMessage(...e)},{once:!0})}let b=[];return!n&&Z&&Z.writable||new y.WritableStream({write(t){if(!(t instanceof Uint8Array))throw new TypeError("Can only wirte Uint8Arrays");if(n){b.push(t);return}J.port1.postMessage(t),re+=t.length,T&&(location.href=T,T=null)},close(){if(n){let t=new Blob(b,{type:"application/octet-stream; charset=utf-8"}),e=document.createElement("a");e.href=URL.createObjectURL(t),e.download=j,e.click()}else J.port1.postMessage("end")},abort(){b=[],J.port1.postMessage("abort"),J.port1.onmessage=null,J.port1.close(),J.port2.close(),J=null}},x.writableStrategy)}return y})});var Re=we((ge,ye)=>{(function(d,a){typeof define=="function"&&define.amd?define([],a):typeof ye=="object"&&typeof ge!="undefined"?ye.exports=a():d.Papa=a()})(ge,function d(){"use strict";var a=typeof self!="undefined"?self:typeof window!="undefined"?window:a!==void 0?a:{},v=!a.document&&!!a.postMessage,K=v&&/blob:/i.test((a.location||{}).protocol),F={},O=0,n={parse:function(t,e){var r=(e=e||{}).dynamicTyping||!1;if(b(r)&&(e.dynamicTypingFunction=r,r={}),e.dynamicTyping=r,e.transform=!!b(e.transform)&&e.transform,e.worker&&n.WORKERS_SUPPORTED){var i=function(){if(!n.WORKERS_SUPPORTED)return!1;var h=(W=a.URL||a.webkitURL||null,C=d.toString(),n.BLOB_URL||(n.BLOB_URL=W.createObjectURL(new Blob(["(",C,")();"],{type:"text/javascript"})))),m=new a.Worker(h),W,C;return m.onmessage=x,m.id=O++,F[m.id]=m}();return i.userStep=e.step,i.userChunk=e.chunk,i.userComplete=e.complete,i.userError=e.error,e.step=b(e.step),e.chunk=b(e.chunk),e.complete=b(e.complete),e.error=b(e.error),delete e.worker,void i.postMessage({input:t,config:e,workerId:i.id})}var o=null;return n.NODE_STREAM_INPUT,typeof t=="string"?o=e.download?new P(e):new z(e):t.readable===!0&&b(t.read)&&b(t.on)?o=new ae(e):(a.File&&t instanceof File||t instanceof Object)&&(o=new M(e)),o.stream(t)},unparse:function(t,e){var r=!1,i=!0,o=",",h=`\r
`,m='"',W=m+m,C=!1,l=null,L=!1;(function(){if(typeof e=="object"){if(typeof e.delimiter!="string"||n.BAD_DELIMITERS.filter(function(s){return e.delimiter.indexOf(s)!==-1}).length||(o=e.delimiter),(typeof e.quotes=="boolean"||typeof e.quotes=="function"||Array.isArray(e.quotes))&&(r=e.quotes),typeof e.skipEmptyLines!="boolean"&&typeof e.skipEmptyLines!="string"||(C=e.skipEmptyLines),typeof e.newline=="string"&&(h=e.newline),typeof e.quoteChar=="string"&&(m=e.quoteChar),typeof e.header=="boolean"&&(i=e.header),Array.isArray(e.columns)){if(e.columns.length===0)throw new Error("Option columns is empty");l=e.columns}e.escapeChar!==void 0&&(W=e.escapeChar+m),typeof e.escapeFormulae=="boolean"&&(L=e.escapeFormulae)}})();var f=new RegExp(g(m),"g");if(typeof t=="string"&&(t=JSON.parse(t)),Array.isArray(t)){if(!t.length||Array.isArray(t[0]))return ee(null,t,C);if(typeof t[0]=="object")return ee(l||Object.keys(t[0]),t,C)}else if(typeof t=="object")return typeof t.data=="string"&&(t.data=JSON.parse(t.data)),Array.isArray(t.data)&&(t.fields||(t.fields=t.meta&&t.meta.fields),t.fields||(t.fields=Array.isArray(t.data[0])?t.fields:typeof t.data[0]=="object"?Object.keys(t.data[0]):[]),Array.isArray(t.data[0])||typeof t.data[0]=="object"||(t.data=[t.data])),ee(t.fields||[],t.data||[],C);throw new Error("Unable to serialize unrecognized input");function ee(s,E,I){var B="";typeof s=="string"&&(s=JSON.parse(s)),typeof E=="string"&&(E=JSON.parse(E));var q=Array.isArray(s)&&0<s.length,D=!Array.isArray(E[0]);if(q&&i){for(var U=0;U<s.length;U++)0<U&&(B+=o),B+=N(s[U],U);0<E.length&&(B+=h)}for(var u=0;u<E.length;u++){var w=q?s.length:E[u].length,k=!1,S=q?Object.keys(E[u]).length===0:E[u].length===0;if(I&&!q&&(k=I==="greedy"?E[u].join("").trim()==="":E[u].length===1&&E[u][0].length===0),I==="greedy"&&q){for(var _=[],p=0;p<w;p++){var A=D?s[p]:p;_.push(E[u][A])}k=_.join("").trim()===""}if(!k){for(var c=0;c<w;c++){0<c&&!S&&(B+=o);var Q=q&&D?s[c]:c;B+=N(E[u][Q],c)}u<E.length-1&&(!I||0<w&&!S)&&(B+=h)}}return B}function N(s,E){if(s==null)return"";if(s.constructor===Date)return JSON.stringify(s).slice(1,25);L===!0&&typeof s=="string"&&s.match(/^[=+\-@].*$/)!==null&&(s="'"+s);var I=s.toString().replace(f,W),B=typeof r=="boolean"&&r||typeof r=="function"&&r(s,E)||Array.isArray(r)&&r[E]||function(q,D){for(var U=0;U<D.length;U++)if(-1<q.indexOf(D[U]))return!0;return!1}(I,n.BAD_DELIMITERS)||-1<I.indexOf(o)||I.charAt(0)===" "||I.charAt(I.length-1)===" ";return B?m+I+m:I}}};if(n.RECORD_SEP=String.fromCharCode(30),n.UNIT_SEP=String.fromCharCode(31),n.BYTE_ORDER_MARK="\uFEFF",n.BAD_DELIMITERS=["\r",`
`,'"',n.BYTE_ORDER_MARK],n.WORKERS_SUPPORTED=!v&&!!a.Worker,n.NODE_STREAM_INPUT=1,n.LocalChunkSize=10485760,n.RemoteChunkSize=5242880,n.DefaultDelimiter=",",n.Parser=$,n.ParserHandle=j,n.NetworkStreamer=P,n.FileStreamer=M,n.StringStreamer=z,n.ReadableStreamStreamer=ae,a.jQuery){var R=a.jQuery;R.fn.parse=function(t){var e=t.config||{},r=[];return this.each(function(h){if(!(R(this).prop("tagName").toUpperCase()==="INPUT"&&R(this).attr("type").toLowerCase()==="file"&&a.FileReader)||!this.files||this.files.length===0)return!0;for(var m=0;m<this.files.length;m++)r.push({file:this.files[m],inputElem:this,instanceConfig:R.extend({},e)})}),i(),this;function i(){if(r.length!==0){var h,m,W,C,l=r[0];if(b(t.before)){var L=t.before(l.file,l.inputElem);if(typeof L=="object"){if(L.action==="abort")return h="AbortError",m=l.file,W=l.inputElem,C=L.reason,void(b(t.error)&&t.error({name:h},m,W,C));if(L.action==="skip")return void o();typeof L.config=="object"&&(l.instanceConfig=R.extend(l.instanceConfig,L.config))}else if(L==="skip")return void o()}var f=l.instanceConfig.complete;l.instanceConfig.complete=function(ee){b(f)&&f(ee,l.file,l.inputElem),o()},n.parse(l.file,l.instanceConfig)}else b(t.complete)&&t.complete()}function o(){r.splice(0,1),i()}}}function y(t){this._handle=null,this._finished=!1,this._completed=!1,this._halted=!1,this._input=null,this._baseIndex=0,this._partialLine="",this._rowCount=0,this._start=0,this._nextChunk=null,this.isFirstChunk=!0,this._completeResults={data:[],errors:[],meta:{}},function(e){var r=J(e);r.chunkSize=parseInt(r.chunkSize),e.step||e.chunk||(r.chunkSize=null),this._handle=new j(r),(this._handle.streamer=this)._config=r}.call(this,t),this.parseChunk=function(e,r){if(this.isFirstChunk&&b(this._config.beforeFirstChunk)){var i=this._config.beforeFirstChunk(e);i!==void 0&&(e=i)}this.isFirstChunk=!1,this._halted=!1;var o=this._partialLine+e;this._partialLine="";var h=this._handle.parse(o,this._baseIndex,!this._finished);if(!this._handle.paused()&&!this._handle.aborted()){var m=h.meta.cursor;this._finished||(this._partialLine=o.substring(m-this._baseIndex),this._baseIndex=m),h&&h.data&&(this._rowCount+=h.data.length);var W=this._finished||this._config.preview&&this._rowCount>=this._config.preview;if(K)a.postMessage({results:h,workerId:n.WORKER_ID,finished:W});else if(b(this._config.chunk)&&!r){if(this._config.chunk(h,this._handle),this._handle.paused()||this._handle.aborted())return void(this._halted=!0);h=void 0,this._completeResults=void 0}return this._config.step||this._config.chunk||(this._completeResults.data=this._completeResults.data.concat(h.data),this._completeResults.errors=this._completeResults.errors.concat(h.errors),this._completeResults.meta=h.meta),this._completed||!W||!b(this._config.complete)||h&&h.meta.aborted||(this._config.complete(this._completeResults,this._input),this._completed=!0),W||h&&h.meta.paused||this._nextChunk(),h}this._halted=!0},this._sendError=function(e){b(this._config.error)?this._config.error(e):K&&this._config.error&&a.postMessage({workerId:n.WORKER_ID,error:e,finished:!1})}}function P(t){var e;(t=t||{}).chunkSize||(t.chunkSize=n.RemoteChunkSize),y.call(this,t),this._nextChunk=v?function(){this._readChunk(),this._chunkLoaded()}:function(){this._readChunk()},this.stream=function(r){this._input=r,this._nextChunk()},this._readChunk=function(){if(this._finished)this._chunkLoaded();else{if(e=new XMLHttpRequest,this._config.withCredentials&&(e.withCredentials=this._config.withCredentials),v||(e.onload=Z(this._chunkLoaded,this),e.onerror=Z(this._chunkError,this)),e.open(this._config.downloadRequestBody?"POST":"GET",this._input,!v),this._config.downloadRequestHeaders){var r=this._config.downloadRequestHeaders;for(var i in r)e.setRequestHeader(i,r[i])}if(this._config.chunkSize){var o=this._start+this._config.chunkSize-1;e.setRequestHeader("Range","bytes="+this._start+"-"+o)}try{e.send(this._config.downloadRequestBody)}catch(h){this._chunkError(h.message)}v&&e.status===0&&this._chunkError()}},this._chunkLoaded=function(){e.readyState===4&&(e.status<200||400<=e.status?this._chunkError():(this._start+=this._config.chunkSize?this._config.chunkSize:e.responseText.length,this._finished=!this._config.chunkSize||this._start>=function(r){var i=r.getResponseHeader("Content-Range");return i===null?-1:parseInt(i.substring(i.lastIndexOf("/")+1))}(e),this.parseChunk(e.responseText)))},this._chunkError=function(r){var i=e.statusText||r;this._sendError(new Error(i))}}function M(t){var e,r;(t=t||{}).chunkSize||(t.chunkSize=n.LocalChunkSize),y.call(this,t);var i=typeof FileReader!="undefined";this.stream=function(o){this._input=o,r=o.slice||o.webkitSlice||o.mozSlice,i?((e=new FileReader).onload=Z(this._chunkLoaded,this),e.onerror=Z(this._chunkError,this)):e=new FileReaderSync,this._nextChunk()},this._nextChunk=function(){this._finished||this._config.preview&&!(this._rowCount<this._config.preview)||this._readChunk()},this._readChunk=function(){var o=this._input;if(this._config.chunkSize){var h=Math.min(this._start+this._config.chunkSize,this._input.size);o=r.call(o,this._start,h)}var m=e.readAsText(o,this._config.encoding);i||this._chunkLoaded({target:{result:m}})},this._chunkLoaded=function(o){this._start+=this._config.chunkSize,this._finished=!this._config.chunkSize||this._start>=this._input.size,this.parseChunk(o.target.result)},this._chunkError=function(){this._sendError(e.error)}}function z(t){var e;y.call(this,t=t||{}),this.stream=function(r){return e=r,this._nextChunk()},this._nextChunk=function(){if(!this._finished){var r,i=this._config.chunkSize;return i?(r=e.substring(0,i),e=e.substring(i)):(r=e,e=""),this._finished=!e,this.parseChunk(r)}}}function ae(t){y.call(this,t=t||{});var e=[],r=!0,i=!1;this.pause=function(){y.prototype.pause.apply(this,arguments),this._input.pause()},this.resume=function(){y.prototype.resume.apply(this,arguments),this._input.resume()},this.stream=function(o){this._input=o,this._input.on("data",this._streamData),this._input.on("end",this._streamEnd),this._input.on("error",this._streamError)},this._checkIsFinished=function(){i&&e.length===1&&(this._finished=!0)},this._nextChunk=function(){this._checkIsFinished(),e.length?this.parseChunk(e.shift()):r=!0},this._streamData=Z(function(o){try{e.push(typeof o=="string"?o:o.toString(this._config.encoding)),r&&(r=!1,this._checkIsFinished(),this.parseChunk(e.shift()))}catch(h){this._streamError(h)}},this),this._streamError=Z(function(o){this._streamCleanUp(),this._sendError(o)},this),this._streamEnd=Z(function(){this._streamCleanUp(),i=!0,this._streamData("")},this),this._streamCleanUp=Z(function(){this._input.removeListener("data",this._streamData),this._input.removeListener("end",this._streamEnd),this._input.removeListener("error",this._streamError)},this)}function j(t){var e,r,i,o=Math.pow(2,53),h=-o,m=/^\s*-?(\d+\.?|\.\d+|\d+\.\d+)([eE][-+]?\d+)?\s*$/,W=/^(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+([+-][0-2]\d:[0-5]\d|Z))|(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d([+-][0-2]\d:[0-5]\d|Z))|(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d([+-][0-2]\d:[0-5]\d|Z))$/,C=this,l=0,L=0,f=!1,ee=!1,N=[],s={data:[],errors:[],meta:{}};if(b(t.step)){var E=t.step;t.step=function(u){if(s=u,q())B();else{if(B(),s.data.length===0)return;l+=u.data.length,t.preview&&l>t.preview?r.abort():(s.data=s.data[0],E(s,C))}}}function I(u){return t.skipEmptyLines==="greedy"?u.join("").trim()==="":u.length===1&&u[0].length===0}function B(){if(s&&i&&(U("Delimiter","UndetectableDelimiter","Unable to auto-detect delimiting character; defaulted to '"+n.DefaultDelimiter+"'"),i=!1),t.skipEmptyLines)for(var u=0;u<s.data.length;u++)I(s.data[u])&&s.data.splice(u--,1);return q()&&function(){if(!s)return;function w(S,_){b(t.transformHeader)&&(S=t.transformHeader(S,_)),N.push(S)}if(Array.isArray(s.data[0])){for(var k=0;q()&&k<s.data.length;k++)s.data[k].forEach(w);s.data.splice(0,1)}else s.data.forEach(w)}(),function(){if(!s||!t.header&&!t.dynamicTyping&&!t.transform)return s;function w(S,_){var p,A=t.header?{}:[];for(p=0;p<S.length;p++){var c=p,Q=S[p];t.header&&(c=p>=N.length?"__parsed_extra":N[p]),t.transform&&(Q=t.transform(Q,c)),Q=D(c,Q),c==="__parsed_extra"?(A[c]=A[c]||[],A[c].push(Q)):A[c]=Q}return t.header&&(p>N.length?U("FieldMismatch","TooManyFields","Too many fields: expected "+N.length+" fields but parsed "+p,L+_):p<N.length&&U("FieldMismatch","TooFewFields","Too few fields: expected "+N.length+" fields but parsed "+p,L+_)),A}var k=1;return!s.data.length||Array.isArray(s.data[0])?(s.data=s.data.map(w),k=s.data.length):s.data=w(s.data,0),t.header&&s.meta&&(s.meta.fields=N),L+=k,s}()}function q(){return t.header&&N.length===0}function D(u,w){return k=u,t.dynamicTypingFunction&&t.dynamicTyping[k]===void 0&&(t.dynamicTyping[k]=t.dynamicTypingFunction(k)),(t.dynamicTyping[k]||t.dynamicTyping)===!0?w==="true"||w==="TRUE"||w!=="false"&&w!=="FALSE"&&(function(S){if(m.test(S)){var _=parseFloat(S);if(h<_&&_<o)return!0}return!1}(w)?parseFloat(w):W.test(w)?new Date(w):w===""?null:w):w;var k}function U(u,w,k,S){var _={type:u,code:w,message:k};S!==void 0&&(_.row=S),s.errors.push(_)}this.parse=function(u,w,k){var S=t.quoteChar||'"';if(t.newline||(t.newline=function(A,c){A=A.substring(0,1048576);var Q=new RegExp(g(c)+"([^]*?)"+g(c),"gm"),V=(A=A.replace(Q,"")).split("\r"),G=A.split(`
`),ie=1<G.length&&G[0].length<V[0].length;if(V.length===1||ie)return`
`;for(var te=0,Y=0;Y<V.length;Y++)V[Y][0]===`
`&&te++;return te>=V.length/2?`\r
`:"\r"}(u,S)),i=!1,t.delimiter)b(t.delimiter)&&(t.delimiter=t.delimiter(u),s.meta.delimiter=t.delimiter);else{var _=function(A,c,Q,V,G){var ie,te,Y,H;G=G||[",","	","|",";",n.RECORD_SEP,n.UNIT_SEP];for(var se=0;se<G.length;se++){var X=G[se],oe=0,ne=0,be=0;Y=void 0;for(var le=new $({comments:V,delimiter:X,newline:c,preview:10}).parse(A),ce=0;ce<le.data.length;ce++)if(Q&&I(le.data[ce]))be++;else{var ue=le.data[ce].length;ne+=ue,Y!==void 0?0<ue&&(oe+=Math.abs(ue-Y),Y=ue):Y=ue}0<le.data.length&&(ne/=le.data.length-be),(te===void 0||oe<=te)&&(H===void 0||H<ne)&&1.99<ne&&(te=oe,ie=X,H=ne)}return{successful:!!(t.delimiter=ie),bestDelimiter:ie}}(u,t.newline,t.skipEmptyLines,t.comments,t.delimitersToGuess);_.successful?t.delimiter=_.bestDelimiter:(i=!0,t.delimiter=n.DefaultDelimiter),s.meta.delimiter=t.delimiter}var p=J(t);return t.preview&&t.header&&p.preview++,e=u,r=new $(p),s=r.parse(e,w,k),B(),f?{meta:{paused:!0}}:s||{meta:{paused:!1}}},this.paused=function(){return f},this.pause=function(){f=!0,r.abort(),e=b(t.chunk)?"":e.substring(r.getCharIndex())},this.resume=function(){C.streamer._halted?(f=!1,C.streamer.parseChunk(e,!0)):setTimeout(C.resume,3)},this.aborted=function(){return ee},this.abort=function(){ee=!0,r.abort(),s.meta.aborted=!0,b(t.complete)&&t.complete(s),e=""}}function g(t){return t.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function $(t){var e,r=(t=t||{}).delimiter,i=t.newline,o=t.comments,h=t.step,m=t.preview,W=t.fastMode,C=e=t.quoteChar===void 0?'"':t.quoteChar;if(t.escapeChar!==void 0&&(C=t.escapeChar),(typeof r!="string"||-1<n.BAD_DELIMITERS.indexOf(r))&&(r=","),o===r)throw new Error("Comment character same as delimiter");o===!0?o="#":(typeof o!="string"||-1<n.BAD_DELIMITERS.indexOf(o))&&(o=!1),i!==`
`&&i!=="\r"&&i!==`\r
`&&(i=`
`);var l=0,L=!1;this.parse=function(f,ee,N){if(typeof f!="string")throw new Error("Input must be a string");var s=f.length,E=r.length,I=i.length,B=o.length,q=b(h),D=[],U=[],u=[],w=l=0;if(!f)return H();if(W||W!==!1&&f.indexOf(e)===-1){for(var k=f.split(i),S=0;S<k.length;S++){if(u=k[S],l+=u.length,S!==k.length-1)l+=i.length;else if(N)return H();if(!o||u.substring(0,B)!==o){if(q){if(D=[],G(u.split(r)),se(),L)return H()}else G(u.split(r));if(m&&m<=S)return D=D.slice(0,m),H(!0)}}return H()}for(var _=f.indexOf(r,l),p=f.indexOf(i,l),A=new RegExp(g(C)+g(e),"g"),c=f.indexOf(e,l);;)if(f[l]!==e)if(o&&u.length===0&&f.substring(l,l+B)===o){if(p===-1)return H();l=p+I,p=f.indexOf(i,l),_=f.indexOf(r,l)}else if(_!==-1&&(_<p||p===-1))u.push(f.substring(l,_)),l=_+E,_=f.indexOf(r,l);else{if(p===-1)break;if(u.push(f.substring(l,p)),Y(p+I),q&&(se(),L))return H();if(m&&D.length>=m)return H(!0)}else for(c=l,l++;;){if((c=f.indexOf(e,c+1))===-1)return N||U.push({type:"Quotes",code:"MissingQuotes",message:"Quoted field unterminated",row:D.length,index:l}),te();if(c===s-1)return te(f.substring(l,c).replace(A,e));if(e!==C||f[c+1]!==C){if(e===C||c===0||f[c-1]!==C){_!==-1&&_<c+1&&(_=f.indexOf(r,c+1)),p!==-1&&p<c+1&&(p=f.indexOf(i,c+1));var Q=ie(p===-1?_:Math.min(_,p));if(f[c+1+Q]===r){u.push(f.substring(l,c).replace(A,e)),f[l=c+1+Q+E]!==e&&(c=f.indexOf(e,l)),_=f.indexOf(r,l),p=f.indexOf(i,l);break}var V=ie(p);if(f.substring(c+1+V,c+1+V+I)===i){if(u.push(f.substring(l,c).replace(A,e)),Y(c+1+V+I),_=f.indexOf(r,l),c=f.indexOf(e,l),q&&(se(),L))return H();if(m&&D.length>=m)return H(!0);break}U.push({type:"Quotes",code:"InvalidQuotes",message:"Trailing quote on quoted field is malformed",row:D.length,index:l}),c++}}else c++}return te();function G(X){D.push(X),w=l}function ie(X){var oe=0;if(X!==-1){var ne=f.substring(c+1,X);ne&&ne.trim()===""&&(oe=ne.length)}return oe}function te(X){return N||(X===void 0&&(X=f.substring(l)),u.push(X),l=s,G(u),q&&se()),H()}function Y(X){l=X,G(u),u=[],p=f.indexOf(i,l)}function H(X){return{data:D,errors:U,meta:{delimiter:r,linebreak:i,aborted:L,truncated:!!X,cursor:w+(ee||0)}}}function se(){h(H()),D=[],U=[]}},this.abort=function(){L=!0},this.getCharIndex=function(){return l}}function x(t){var e=t.data,r=F[e.workerId],i=!1;if(e.error)r.userError(e.error,e.file);else if(e.results&&e.results.data){var o={abort:function(){i=!0,re(e.workerId,{data:[],errors:[],meta:{aborted:!0}})},pause:T,resume:T};if(b(r.userStep)){for(var h=0;h<e.results.data.length&&(r.userStep({data:e.results.data[h],errors:e.results.errors,meta:e.results.meta},o),!i);h++);delete e.results}else b(r.userChunk)&&(r.userChunk(e.results,o,e.file),delete e.results)}e.finished&&!i&&re(e.workerId,e.results)}function re(t,e){var r=F[t];b(r.userComplete)&&r.userComplete(e),r.terminate(),delete F[t]}function T(){throw new Error("Not implemented.")}function J(t){if(typeof t!="object"||t===null)return t;var e=Array.isArray(t)?[]:{};for(var r in t)e[r]=J(t[r]);return e}function Z(t,e){return function(){t.apply(e,arguments)}}function b(t){return typeof t=="function"}return K&&(a.onmessage=function(t){var e=t.data;if(n.WORKER_ID===void 0&&e&&(n.WORKER_ID=e.workerId),typeof e.input=="string")a.postMessage({workerId:n.WORKER_ID,results:n.parse(e.input,e.config),finished:!0});else if(a.File&&e.input instanceof File||e.input instanceof Object){var r=n.parse(e.input,e.config);r&&a.postMessage({workerId:n.WORKER_ID,results:r,finished:!0})}}),(P.prototype=Object.create(y.prototype)).constructor=P,(M.prototype=Object.create(y.prototype)).constructor=M,(z.prototype=Object.create(z.prototype)).constructor=z,(ae.prototype=Object.create(y.prototype)).constructor=ae,n})});async function ke(d,a){let v=new WebSocket(d);if(!v)throw new Error("server didn't accept ws");return v.addEventListener("open",()=>{console.log("Opened websocket")}),v.addEventListener("message",({data:K})=>{let{count:F,tz:O,error:n,name:R,duration:y,endTime:P}=JSON.parse(K);if(R&&y&&P){let M=P-y;a.push({name:R,duration:y,startTime:M,entryType:"server",endTime:P})}else n?console.error(n):console.info({count:F,tz:O,error:n})}),v.addEventListener("close",()=>{console.log("Closed websocket")}),v}function Ee(d){let a=new PerformanceObserver(F=>{F.getEntries().forEach(O=>{let{startTime:n,duration:R,name:y,entryType:P}=O;n=Math.floor(n),R=Math.floor(R);let M=n+R,z={name:y,endTime:M,startTime:n,duration:R,entryType:P};console.log(z),d.push(z)})}),v=new PerformanceObserver(F=>{F.getEntriesByType("resource").forEach(O=>{let{startTime:n,duration:R,name:y,entryType:P,responseStart:M,responseEnd:z}=O;y.includes("mitm")||y.includes("favicon")||(n=Math.floor(n),R=Math.floor(R),z=Math.floor(z),M=Math.floor(M),/^https?:\/\//.test(y)&&(y=String(y.split("/").pop())),d=d.concat([{name:"download:request_sent",startTime:n,duration:0,endTime:n,entryType:"mark"},{name:"download:response_start",startTime:n,duration:M-n,endTime:M,entryType:"resource"},{name:"download:response_complete",startTime:M-n,duration:z-M,endTime:z,entryType:"resource"}]),console.log(O.toJSON()))})});return{ro:v,po:a,listEntries:()=>{let F=d.sort((O,n)=>O.endTime-n.endTime).reduce((O,n)=>{let{name:R,endTime:y,startTime:P,duration:M,entryType:z}=n;return O[R]={endTime:y,startTime:P,duration:M,entryType:z},O},{});window.requestIdleCallback(()=>{console.table(F),a&&a.disconnect(),v&&v.disconnect()})}}}var pe=ve(Se());function me(d,a="file.txt",v){let K=!1;console.log({url:d}),performance.mark("download:start");let F=!1;pe.default.mitm=`${location.origin}/mitm.html`;let O=pe.default.createWriteStream(a);return window.onunload=()=>{O.abort()},window.onbeforeunload=n=>{F||(n.returnValue="Are you sure you want to leave?")},fetch(d,{headers:{TE:"trailers",startTime:String(performance.now()),started_at:String(Math.floor(Date.now()-performance.now())),"cache-control":"no-cache, no-store, max-age=1, s-maxage=1"}}).then(n=>!n.body||!n.ok?Promise.reject(new Error(n.statusText)):n.body.pipeTo(O)).then(()=>{F=!0,performance.mark("download:tear_down"),requestIdleCallback(()=>{v()})})}var Ae=ve(Re());var Te=[],{po:De,ro:Ue,listEntries:Fe}=Ee(Te),_e=new URL(window.location.origin);_e.protocol="wss";_e.pathname="/csv/ws";globalThis.ws=ke(_e,Te);De.observe({entryTypes:["mark","measure"]});Ue.observe({entryTypes:["resource"]});requestIdleCallback(()=>{me("/csv/csvparse.json","csvparse.json",()=>{Fe()})});})();
/* @license
Papa Parse
v5.3.1
https://github.com/mholt/PapaParse
License: MIT
*/
//# sourceMappingURL=data:application/json;base64,
